light_horizontal_tile:
  card: 
    type: custom:decluttering-card
    template: horizontal_base
    variables: 
      - entity: "[[entity]]"
    # icon: mdi:floor-lamp
    # aspect_ratio: 3/1
    styles:
    #   card:
    #     - border-radius: 20px    
    #   icon: 
    #     - right: 70%

    #   name:
    #     - justify-self: start
    #     - padding-left: 20%
    #     - font-weight: bold
    #     - font-family: Helvetica
    #     - font-size: 13px
    #     - padding-bottom: 20px   
    #     - color: var(--primary-text-color)
    #     - max-width: 75%   
    #     - grid-area: "i"  

    #   state:
    #     - font-size: 11px
    #     - font-family: Helvetica
    #     - justify-self: start
    #     - text-transform: capitalize
    #     - font-weight: bold
    #     - padding-left: 20%
    #     - padding-top: 20px   
    #     - color: var(--primary-text-color)
    #     - max-width: 75%     
    #     - grid-area: "i"   

      custom_fields:
        brightness: 
          [top: 20%, right: 5%, width: 50px, height: 50px, position: absolute, letter-spacing: 0.03vw]            

    # state:
    #   - styles:
    #       card: [background-color: 'rgba(255, 255, 255, 0.8)']
    #       name: [color: 'rgba(0, 0, 0, 0.6)']
    #       state: [color: 'rgba(0, 0, 0, 0.6)']
    #       icon: [color: 'var(--button-card-light-color)']   
    #     value: 'on'
    #     id: _state_value_on

    #   - styles: 
    #       icon:
    #         - color: rgb(142, 142, 147)
    #     value: 'off'     

    custom_fields:    
      brightness: >
        [[[ if (entity.state === 'on' && entity.attributes.brightness) {
        const brightness = Math.round(entity.attributes.brightness / 2.54);
        const radius = 20.5; const circumference = radius * 2 * Math.PI; 
        return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" style="
        transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - brightness / 100 * circumference};" />
        <text x="50%" y="54%" fill="#8d8e90" font-size="11" text-anchor="middle" alignment-baseline="middle">${brightness}<tspan font-size="">%</tspan></text></svg>`; } ]]]                   


      # grid:
      #   - grid-template-areas: '"i" "ns"'
      #   - grid-template-columns: 20% 80%
      #   - grid-template-rows: 1fr                     

    

      # # hold_action: !include popup/light_popup.yaml    
      # state: 
      #   - styles: 
      #       card: [background-color: 'rgba(255, 255, 255, 0.8)']
      #       name: [color: 'rgba(0, 0, 0, 0.6)']
      #       state: [color: 'rgba(0, 0, 0, 0.6)']
      #       icon: [color: 'var(--button-card-light-color)'] 
      #     value: 'on'
      #     id: _state_value_on
   
      # styles:
      #   grid:
      #     - position: relative




      # i 
      # n s
